name: Android CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup SSH (optional)
      if: ${{ secrets.DEPLOY_SSH_KEY != '' }}
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

    - name: Add known_hosts (GitHub)
      if: ${{ secrets.DEPLOY_SSH_KEY != '' }}
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts
      
    - name: Make Gradle wrapper executable
      run: chmod +x android/gradlew
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        accept-android-sdk-licenses: true
        log-accepted-android-sdk-licenses: true
        packages: |
          platform-tools
          platforms;android-35
          build-tools;35.0.0

    - name: Setup Gradle cache
      uses: gradle/actions/setup-gradle@v3

    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test --if-present
      
    - name: Lint code
      run: npm run lint --if-present
      
    - name: Build web app
      run: npm run build
      
    - name: Add Android platform
      run: |
        if [ ! -d android/app ]; then
          npx cap add android
        else
          echo "Android platform already added"
        fi
      
    - name: Sync Capacitor
      run: npx cap sync android
    
    - name: Extract keystore SHA-1 (optional)
      if: ${{ secrets.ANDROID_KEYSTORE != '' || secrets.SIGNING_KEYSTORE_BASE64 != '' }}
      shell: bash
      run: |
        set -euo pipefail
        mkdir -p android/app
        if [ -n "${{ secrets.ANDROID_KEYSTORE }}" ]; then
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android/app/release.keystore
          STOREPASS="${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"
          KEYPASS="${{ secrets.ANDROID_KEY_PASSWORD }}"
          ALIAS="${{ secrets.ANDROID_KEY_ALIAS }}"
        else
          echo "${{ secrets.SIGNING_KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.keystore
          STOREPASS="${{ secrets.SIGNING_KEYSTORE_PASSWORD }}"
          KEYPASS="${{ secrets.SIGNING_KEY_PASSWORD }}"
          ALIAS="${{ secrets.SIGNING_KEY_ALIAS }}"
        fi
        RAW=$(keytool -list -v -alias "$ALIAS" -keystore android/app/release.keystore -storepass "$STOREPASS" -keypass "$KEYPASS" || true)
        FP=$(printf "%s" "$RAW" | sed -n -e 's/.*SHA-1:\s*\(.*\)/\1/p' -e 's/.*SHA1:\s*\(.*\)/\1/p' | head -n1 | tr '[:lower:]' '[:upper:]' | tr -d ' \r:')
        if [ -n "$FP" ]; then
          echo "üîê Keystore SHA-1: $FP"
        else
          echo "‚ö†Ô∏è Unable to compute SHA-1 (check alias/passwords)."
        fi
    
    - name: Check Android build
      working-directory: android
      run: ./gradlew assembleDebug --stacktrace
        
    - name: Run Android unit tests
      working-directory: android
      run: ./gradlew testDebugUnitTest --stacktrace
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: android-test-results
        path: android/app/build/test-results/