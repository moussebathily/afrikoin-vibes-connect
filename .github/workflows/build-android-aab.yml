name: Build Android AAB

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup SSH (optional)
      if: ${{ secrets.DEPLOY_SSH_KEY != '' }}
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}

    - name: Add known_hosts (GitHub)
      if: ${{ secrets.DEPLOY_SSH_KEY != '' }}
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> ~/.ssh/known_hosts

    - name: Make Gradle wrapper executable
      run: chmod +x android/gradlew

    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v2
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      
    - name: Install dependencies
      run: npm ci --legacy-peer-deps --ignore-optional
      
    - name: Build web app
      run: npm run build
      
    - name: Add Android platform
      run: |
        if [ ! -d android/app ]; then
          npx cap add android
        else
          echo "Android platform already added"
        fi
      
    - name: Sync Capacitor
      run: npx cap sync android
      
    - name: Setup Android signing
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      run: |
        if [ -n "${{ secrets.ANDROID_KEYSTORE }}" ]; then
          echo "‚úÖ Setting up Android signing"
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android/app/release.keystore
          echo "MYAPP_UPLOAD_STORE_FILE=release.keystore" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/gradle.properties
        else
          echo "‚ö†Ô∏è Android keystore not found, release will be unsigned"
        fi
        
    - name: Show keystore SHA-1 (verify)
      if: (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) && secrets.ANDROID_KEYSTORE != ''
      run: |
        echo "üîé Computing SHA-1 of upload key..."
        keytool -list -v -alias "${{ secrets.ANDROID_KEY_ALIAS }}" -keystore android/app/release.keystore -storepass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" -keypass "${{ secrets.ANDROID_KEY_PASSWORD }}" | grep -E "SHA1:|SHA-1:"
        if [ -n "${{ secrets.PLAY_UPLOAD_SHA1 }}" ]; then
          echo "üéØ Expected (Play Console): ${{ secrets.PLAY_UPLOAD_SHA1 }}"
          actual=$(keytool -list -v -alias "${{ secrets.ANDROID_KEY_ALIAS }}" -keystore android/app/release.keystore -storepass "${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" -keypass "${{ secrets.ANDROID_KEY_PASSWORD }}" | sed -n 's/.*SHA1:\s*\(.*\)/\1/p' | tr '[:lower:]' '[:upper:]')
          if [ "$actual" != "${{ secrets.PLAY_UPLOAD_SHA1 }}" ]; then
            echo "‚ùå Keystore SHA-1 does not match expected Play Console upload key."
            exit 1
          else
            echo "‚úÖ Keystore SHA-1 matches expected Play Console upload key."
          fi
        fi
        
    - name: Build Android AAB (Debug)
      if: github.event_name == 'pull_request'
      working-directory: android
      run: |
        echo "üî® Building debug AAB..."
        ./gradlew bundleDebug --stacktrace --info
        
    - name: Build Android AAB (Release)
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      working-directory: android
      run: |
        echo "üî® Building release AAB..."
        ./gradlew bundleRelease --stacktrace --info
        
    - name: Upload Debug AAB
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: app-debug.aab
        path: android/app/build/outputs/bundle/debug/app-debug.aab
        
    - name: Upload Release AAB
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: app-release.aab
        path: android/app/build/outputs/bundle/release/app-release.aab
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android/app/build/outputs/bundle/release/app-release.aab
        name: AfriKoin v${{ github.ref_name }}
        body: |
          ## AfriKoin v${{ github.ref_name }}
          
          ### üì± Android AAB
          - Version: ${{ github.ref_name }}
          - Build: ${{ github.run_number }}
          - Signed and ready for Google Play Store
          
          ### üîß Changes
          - Auto-generated release from tag ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Notify on success
      if: success()
      run: |
        echo "‚úÖ AAB build completed successfully!"
        echo "üì¶ Artifact uploaded for ${GITHUB_REF_NAME:-PR debug}"
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå La construction AAB a √©chou√© !"
        echo "üîç Consultez les journaux ci-dessus pour plus de d√©tails"
        echo "üí° Common issues: Missing keystore, dependency conflicts, or build configuration errors"
        echo "üìã Check: 1) Gradle sync, 2) Dependencies, 3) Signing config, 4) Build environment"