name: Build Android AAB

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Make Gradle wrapper executable
      run: chmod +x ./gradlew
      
    - name: Ensure Gradle wrapper exists
      run: |
        if [ ! -f android/gradle/wrapper/gradle-wrapper.jar ]; then
          echo "⚠️ Gradle wrapper JAR missing, regenerating..."
          ./gradlew wrapper --gradle-version=8.8 -p android
        else
          echo "✅ Gradle wrapper JAR found"
        fi
    
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v2
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      
    - name: Install dependencies
      run: npm ci --legacy-peer-deps --ignore-optional
      
    - name: Build web app
      run: npm run build
      
    - name: Add Android platform
      run: |
        if [ ! -d android/app ]; then
          npx cap add android
        else
          echo "Android platform already added"
        fi
      
    - name: Sync Capacitor
      run: npx cap sync android
      
    - name: Setup Android signing
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      run: |
        if [ -n "${{ secrets.ANDROID_KEYSTORE }}" ]; then
          echo "✅ Setting up Android signing"
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android/app/release.keystore
          echo "MYAPP_UPLOAD_STORE_FILE=release.keystore" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/gradle.properties
        else
          echo "⚠️ Android keystore not found, release will be unsigned"
        fi
        
    - name: Build Android AAB (Debug)
      if: github.event_name == 'pull_request'
      run: |
        echo "🔨 Building debug AAB..."
        ./gradlew -p android bundleDebug --stacktrace --info
        
    - name: Build Android AAB (Release)
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      run: |
        echo "🔨 Building release AAB..."
        ./gradlew -p android bundleRelease --stacktrace --info
        
    - name: Upload Debug AAB
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: app-debug.aab
        path: android/app/build/outputs/bundle/debug/app-debug.aab
        
    - name: Upload Release AAB
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: app-release.aab
        path: android/app/build/outputs/bundle/release/app-release.aab
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android/app/build/outputs/bundle/release/app-release.aab
        name: AfriKoin v${{ github.ref_name }}
        body: |
          ## AfriKoin v${{ github.ref_name }}
          
          ### 📱 Android AAB
          - Version: ${{ github.ref_name }}
          - Build: ${{ github.run_number }}
          - Signed and ready for Google Play Store
          
          ### 🔧 Changes
          - Auto-generated release from tag ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Notify on success
      if: success()
      run: |
        echo "✅ AAB build completed successfully!"
        echo "📦 Artifact uploaded for ${GITHUB_REF_NAME:-PR debug}"
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ La construction AAB a échoué !"
        echo "🔍 Consultez les journaux ci-dessus pour plus de détails"
        echo "💡 Common issues: Missing keystore, dependency conflicts, or build configuration errors"
        echo "📋 Check: 1) Gradle sync, 2) Dependencies, 3) Signing config, 4) Build environment"