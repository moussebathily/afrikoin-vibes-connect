name: Build and Upload APK with Download URL

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    env:
      EAS_TOKEN: ${{ secrets.EAS_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Login to EAS CLI
        run: eas login --token $EAS_TOKEN

      - name: Build APK and get download URL
        id: build
        run: |
          echo "Lancement de la build EAS..."
          BUILD_JSON=$(eas build --platform android --profile preview --non-interactive --json)
          echo "Réponse build JSON : $BUILD_JSON"
          BUILD_ID=$(echo "$BUILD_JSON" | jq -r '.id')
          echo "Build ID: $BUILD_ID"

          for i in {1..30}; do
            STATUS_JSON=$(eas build:view --platform android --id "$BUILD_ID" --json)
            STATUS=$(echo "$STATUS_JSON" | jq -r '.status')
            echo "Statut build : $STATUS"
            if [[ "$STATUS" == "finished" ]]; then
              break
            elif [[ "$STATUS" == "errored" ]]; then
              echo "Build échouée"
              exit 1
            fi
            sleep 30
          done

          DOWNLOAD_URL=$(echo "$STATUS_JSON" | jq -r '.artifacts.buildUrl')
          echo "Lien APK : $DOWNLOAD_URL"

          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT

      - name: Afficher le lien de téléchargement
        run: echo "Télécharge l'APK ici : ${{ steps.build.outputs.download_url }}"
