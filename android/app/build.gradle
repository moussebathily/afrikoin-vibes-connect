apply plugin: 'com.android.application'

android {
    namespace "app.lovable.afrikoin"
    compileSdk 34

    defaultConfig {
        applicationId "app.lovable.afrikoin"
        minSdk 22
        targetSdk 34
        def refName = System.getenv("GITHUB_REF_NAME") ?: System.getenv("REF_NAME") ?: ""
        def m = (refName =~ /^v(\d+)\.(\d+)\.(\d+)$/)
        def computedVersionCode = m ? (m[0][1].toInteger() * 10000 + m[0][2].toInteger() * 100 + m[0][3].toInteger()) : 122
        def computedVersionName = m ? "${m[0][1]}.${m[0][2]}.${m[0][3]}" : "1.2.2"
        versionCode computedVersionCode
        versionName computedVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        androidResources {
             // Files and dirs to omit from the packaged APK/AAB
             ignoreAssetsPattern "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (project.hasProperty("MYAPP_UPLOAD_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
    }

    signingConfigs {
        release {
            if (project.hasProperty("MYAPP_UPLOAD_STORE_FILE")) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation project(':capacitor-android')
    implementation project(':capacitor-app')
    implementation project(':capacitor-haptics')
    implementation project(':capacitor-keyboard')
    implementation project(':capacitor-status-bar')
    implementation project(':capacitor-device')
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.activity:activity:1.8.2'
    implementation 'androidx.fragment:fragment:1.6.2'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'androidx.webkit:webkit:1.9.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.preference:preference:1.2.1'
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info "google-services.json not found, google-services plugin not applied. Push Notifications won't work"
}