// Fichier d'intégration Android Studio pour AfriKoin
// À copier dans android/app/build.gradle

apply plugin: 'com.android.application'

// Configuration automatique pour AfriKoin
def afrikoinConfig = [
    compileSdkVersion: 34,
    targetSdkVersion: 34,
    minSdkVersion: 22,
    versionCode: getVersionCode(),
    versionName: getVersionName(),
    applicationId: "com.afrikoin.app"
]

// Fonction pour obtenir le code de version automatiquement
def getVersionCode() {
    def code = project.hasProperty('VERSION_CODE') ? VERSION_CODE.toInteger() : 1
    println "📱 Version Code: $code"
    return code
}

// Fonction pour obtenir le nom de version automatiquement
def getVersionName() {
    def name = project.hasProperty('VERSION_NAME') ? VERSION_NAME : "1.0.0"
    println "📱 Version Name: $name"
    return name
}

android {
    namespace afrikoinConfig.applicationId
    compileSdk afrikoinConfig.compileSdkVersion

    defaultConfig {
        applicationId afrikoinConfig.applicationId
        minSdk afrikoinConfig.minSdkVersion
        targetSdk afrikoinConfig.targetSdkVersion
        versionCode afrikoinConfig.versionCode
        versionName afrikoinConfig.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Configuration pour AfriKoin
        manifestPlaceholders = [
            appName: "AfriKoin",
            appIcon: "@mipmap/ic_launcher"
        ]
    }

    // Configuration des types de build automatique
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            shrinkResources false
            
            // Configuration de signature automatique pour debug
            signingConfig signingConfigs.debug
            
            buildConfigField "String", "BUILD_TYPE", '"debug"'
            buildConfigField "boolean", "IS_PRODUCTION", "false"
            
            println "🔧 Configuration DEBUG activée"
        }
        
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Configuration de signature automatique pour release
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                signingConfig signingConfigs.release
            } else {
                println "⚠️ Pas de keystore de production configuré"
            }
            
            buildConfigField "String", "BUILD_TYPE", '"release"'
            buildConfigField "boolean", "IS_PRODUCTION", "true"
            
            println "🚀 Configuration RELEASE activée"
        }
    }

    // Configuration automatique des signatures
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        
        if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
            release {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
            }
        }
    }

    // Configuration pour optimiser les builds
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    // Configuration pour les splits automatiques
    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    // Configuration pour les tests automatiques
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    // Configuration pour améliorer les performances de build
    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }

    // Configuration lint automatique
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'InvalidPackage'
    }
}

// Tâches Gradle personnalisées pour AfriKoin
task buildAfrikoinDebug {
    description = 'Build automatique AfriKoin en mode debug'
    group = 'afrikoin'
    
    doLast {
        println "🚀 Début du build AfriKoin Debug..."
        
        // Nettoyer avant le build
        project.tasks.clean.execute()
        
        // Assembler l'APK debug
        project.tasks.assembleDebug.execute()
        
        println "✅ Build AfriKoin Debug terminé!"
        println "📁 APK disponible dans: build/outputs/apk/debug/"
    }
}

task buildAfrikoinRelease {
    description = 'Build automatique AfriKoin en mode release (AAB)'
    group = 'afrikoin'
    
    doLast {
        println "🚀 Début du build AfriKoin Release..."
        
        // Vérifier la configuration de signature
        if (!project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
            throw new GradleException("❌ Configuration de keystore manquante pour le build release")
        }
        
        // Nettoyer avant le build
        project.tasks.clean.execute()
        
        // Créer l'AAB pour le Play Store
        project.tasks.bundleRelease.execute()
        
        println "✅ Build AfriKoin Release terminé!"
        println "📁 AAB disponible dans: build/outputs/bundle/release/"
        println "🚀 Prêt pour upload sur Google Play Store!"
    }
}

task afrikoinBuildInfo {
    description = 'Affiche les informations de build AfriKoin'
    group = 'afrikoin'
    
    doLast {
        println """
        ================================
           INFORMATIONS BUILD AFRIKOIN
        ================================
        
        📱 Application ID: ${afrikoinConfig.applicationId}
        📊 Version Code: ${afrikoinConfig.versionCode}
        🏷️ Version Name: ${afrikoinConfig.versionName}
        🎯 Target SDK: ${afrikoinConfig.targetSdkVersion}
        📦 Min SDK: ${afrikoinConfig.minSdkVersion}
        
        🔧 Tâches disponibles:
        - ./gradlew buildAfrikoinDebug    # Build APK debug
        - ./gradlew buildAfrikoinRelease  # Build AAB release
        - ./gradlew afrikoinBuildInfo     # Afficher ces infos
        
        ================================
        """.stripIndent()
    }
}

// Automatisation post-build
gradle.taskGraph.afterTask { Task task ->
    if (task.name == 'bundleRelease') {
        println """
        🎉 AAB créé avec succès!
        
        📁 Fichier: build/outputs/bundle/release/app-release.aab
        
        🚀 Prochaines étapes:
        1. Connectez-vous à https://play.google.com/console
        2. Sélectionnez votre app AfriKoin
        3. Créez une nouvelle version
        4. Uploadez ce fichier AAB
        5. Publiez!
        
        """.stripIndent()
    }
    
    if (task.name == 'assembleDebug') {
        println """
        🎉 APK debug créé avec succès!
        
        📁 Fichier: build/outputs/apk/debug/app-debug.apk
        
        📱 Pour tester:
        adb install build/outputs/apk/debug/app-debug.apk
        
        """.stripIndent()
    }
}

// Configuration automatique des dépendances AfriKoin
dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    
    // Capacitor Core
    implementation project(':capacitor-android')
    implementation project(':capacitor-haptics')
    implementation project(':capacitor-keyboard')
    implementation project(':capacitor-status-bar')
    
    // Tests automatiques
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    
    println "📦 Dépendances AfriKoin configurées automatiquement"
}

// Configuration de proguard pour la release
android.applicationVariants.all { variant ->
    if (variant.name == 'release') {
        variant.outputs.all { output ->
            def formattedDate = new Date().format('yyyyMMdd-HHmmss')
            outputFileName = "afrikoin-${variant.versionName}-${formattedDate}.aab"
            println "📦 Nom de fichier AAB: $outputFileName"
        }
    }
}

println "🟢 Configuration Android Studio pour AfriKoin chargée avec succès!"