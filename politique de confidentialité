-- Create profiles table linked to auth.users
CREATE TABLE public.profiles (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    user_id UUID UNIQUE REFERENCES auth.users(id) ON DELETE CASCADE,
    full_name TEXT,
    avatar_url TEXT,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Enable Row Level Security
ALTER TABLE public.profiles ENABLE ROW LEVEL SECURITY;

-- Policy to select only user's own profile
CREATE POLICY "Users can view own profile" ON public.profiles
    FOR SELECT USING (
        auth.uid() = user_id
    );

-- Policy to update only user's own profile
CREATE POLICY "Users can update own profile" ON public.profiles
    FOR UPDATE USING (
        auth.uid() = user_id
    ) WITH CHECK (
        auth.uid() = user_id
    );

-- Policy to insert only user's own profile
CREATE POLICY "Users can insert own profile" ON public.profiles
    FOR INSERT WITH CHECK (
        auth.uid() = user_id
    );

-- Policy to prevent profile deletion
CREATE POLICY "Prevent profile deletion" ON public.profiles
    FOR DELETE USING (false);

-- Create an index to improve RLS policy performance
CREATE INDEX idx_profiles_user_id ON public.profiles(user_id);
